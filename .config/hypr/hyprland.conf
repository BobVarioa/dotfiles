# personal monitor setup

source = ~/.config/hypr/monitors.conf

## enviroment vars
env = XDG_SESSION_TYPE,wayland
env = XDG_CONFIG_HOME,$HOME/.config

# cursor
env = XCURSOR_SIZE,24
env = XCURSOR_THEME,breeze_cursors
env = HYPRCURSOR_SIZE,24
env = HYPRCURSOR_THEME,hyprcursor_Dracula

# wayland as default
env = QT_QPA_PLATFORM,wayland;xcb
env = GDK_BACKEND,wayland,x11,*
env = CLUTTER_BACKEND,wayland
env = ELECTRON_OZONE_PLATFORM_HINT,auto
# env = SDL_VIDEODRIVER,wayland # causes issues

# qt tweaks
env = QT_QPA_PLATFORMTHEME,qt6ct
env = QT_QUICK_CONTROLS_STYLE,org.kde.desktop
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,1

# keyboard
env = XMODIFIERS,@im=fcitx
env = QT_IM_MODULES,wayland;fcitx;ibus
env = SDL_IM_MODULE,fcitx
env = GTK_IM_MODULE,fcitx

## start all apps
# exec-once = waybar # this is started by lock.sh later
exec-once = swaync
exec-once = swayosd-server
exec-once = playerctld daemon
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user start hyprpolkitagent
exec-once = ydotoold
exec-once = nwg-drawer -r 
exec-once = arch-update --tray
exec-once = hypridle
exec-once = bluetoothctl power off
exec-once = openrgb -p on

# wallpaper
exec-once = ~/.config/hypr/monitors.sh

# cursor
exec-once = hyprctl setcursor hyprcursor_Dracula 24
exec-once = xsetroot -cursor_name left_ptr # this is needed to make xcursor work

# lock on start
exec-once = ~/.config/hypr/lock.sh

debug {
    disable_logs = false
    full_cm_proto = true
}

cursor {
    zoom_factor = 1.0
}

input {
    kb_layout = us
    # kb_variant =
    # kb_model =
    kb_options = compose:caps
    # kb_rules =

    touchpad {
        natural_scroll = false
        disable_while_typing = false
		clickfinger_behavior = true
    }
}

general {
    gaps_in = 5
    gaps_out = 8
    border_size = 2
    col.active_border = rgba(a07cb4ff)
    col.inactive_border = rgba(595959aa)

    layout = dwindle

    resize_on_border = true
    allow_tearing = true
}

decoration {
    rounding = 5

    shadow {
        enabled = false
    }

    blur {
        enabled = false
    }

    dim_special = 0
}

gestures {
    # workspace_swipe = true
    workspace_swipe_forever = true
}

animations {
    enabled = true
    # first_launch_animation = false

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
    animation = specialWorkspace, 0
}

dwindle {
    pseudotile = true
    preserve_split = true
}

group {
    col.border_active = rgba(a07cb4ff)
    col.border_inactive = rgba(595959aa)

    groupbar {
        gradients = true

        col.active = rgba(a07cb4ff)
        col.inactive = rgba(595959aa)
    }
}

xwayland {
  force_zero_scaling = true
}

render {
    direct_scanout = true
}

misc {
    force_default_wallpaper = 1
	vfr = true

	key_press_enables_dpms = true
	mouse_move_enables_dpms = true

	# pretty cool effect, but not that worth it
    # animate_mouse_windowdragging = true

	# enable_swallow = true
    # swallow_regex=^(kitty)$
}

## controls

# general
bind = super, W, killactive
bind = alt, space, exec, pkill anyrun || anyrun
bind = super, space, exec, nwg-drawer 
bind = super, F, togglefloating
bind = super shift, F, fullscreen
bind = super, G, togglegroup
bind = super shift, G, moveoutofgroup
bind = super, P, pin
bind = super, home, exec, ~/.config/hypr/gamemode.sh
bind = super+shift, D, exec, nwg-displays

# screenshot
bind = super shift, S, exec, grimblast copysave area
bind = super, Print, exec, grimblast copysave active

# locking
bind = super, L, exec, ~/.config/hypr/lock.sh

# media
binde = ,XF86AudioPlay, exec, playerctl play-pause
binde = ,XF86AudioPause, exec, playerctl play-pause
binde = ,XF86AudioNext, exec, playerctl next
binde = ,XF86AudioPrev, exec, playerctl previous

# volume, mute
binde = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise
binde = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume lower
bind =  ,XF86AudioMute,        exec, swayosd-client --output-volume mute-toggle

# brightness
binde = ,XF86MonBrightnessUp,   exec, swayosd-client --brightness raise
binde = ,XF86MonBrightnessDown, exec, swayosd-client --brightness lower

# ignore bluetooth key
# bind = ,XF86Bluetooth, exec, echo

# window movement
bind = super, left,  movewindow, l
bind = super, right, movewindow, r
bind = super, up,    movewindow, u
bind = super, down,  movewindow, d

# move a window into a (c)orner
bind = super, C, exec, hyprctl --batch "dispatch setfloating; dispatch resizeactive exact 30% 30%; dispatch movewindow r; dispatch movewindow u; dispatch moveactive -15 15"

# make a window fakefull(s)creen
bind = super, S, fullscreenstate, -1 2
# (y)outube
bind = super, Y, exec, hyprctl dispatch "fullscreenstate -1 2" && sleep 0.1 && ydotool key CTRL+- --repeat 4 && ydotool key f

# alt tab
bind = alt, tab, exec, hyprctl dispatch focuswindow address:$(hyprctl clients -j | jq -r "[.[] | select(.focusHistoryID != -1)] | sort_by(.focusHistoryID) | reverse[0].address")

# zoom
bind = super, Z, exec, zsh -c "if [[ $(hyprctl getoption cursor:zoom_factor -j | jq 'if .float == 1.0 then 1 else 0 end') -eq 1 ]]; then hyprctl keyword cursor:zoom_factor 2.0; else; hyprctl keyword cursor:zoom_factor 1.0; fi"

# Switch workspaces with super + [0-9]
bind = super, 1, workspace, 1
bind = super, 2, workspace, 2
bind = super, 3, workspace, 3
bind = super, 4, workspace, 4
bind = super, 5, workspace, 5
bind = super, 6, workspace, 6
bind = super, 7, workspace, 7
bind = super, 8, workspace, 8
bind = super, 9, workspace, 9
bind = super, 0, workspace, 10

bind = super shift, 1, movetoworkspace, 1
bind = super shift, 2, movetoworkspace, 2
bind = super shift, 3, movetoworkspace, 3
bind = super shift, 4, movetoworkspace, 4
bind = super shift, 5, movetoworkspace, 5
bind = super shift, 6, movetoworkspace, 6
bind = super shift, 7, movetoworkspace, 7
bind = super shift, 8, movetoworkspace, 8
bind = super shift, 9, movetoworkspace, 9
bind = super shift, 0, movetoworkspace, 10

# move/resize windows
bindm = super, mouse:272, movewindow
bindm = super, Control_L, movewindow
bindm = super, mouse:273, resizewindow
bindm = super, Alt_L, resizewindow

# lock the (m)ouse to the current window
bind=super,m,submap,mouselock
submap=mouselock
bind=,l,exec, hyprctl --batch "keyword input:follow_mouse 2; dispatch submap reset" && notify-send "Locked mouse"
bind=,u,exec, hyprctl --batch "keyword input:follow_mouse 1; dispatch submap reset" && notify-send "Unlocked mouse"
submap=reset

# mouse but key
bind=super,q,submap,click
submap=click
binde=,q,exec, ydotool click 0x40
bindr=,q,exec, ydotool click 0x80
binde=,w,exec, ydotool click 0x41
bindr=,w,exec, ydotool click 0x81
bindr=,Left,exec, ydotool mousemove -x -5 -y 0
bindr=,Right,exec, ydotool mousemove -x 5 -y 0
bindr=,Up,exec, ydotool mousemove -x 0 -y -5
bindr=,Down,exec, ydotool mousemove -x 0 -y 5
bind=,catchall,submap,reset
submap=reset

# screen drawing
bind = SUPER, D, togglespecialworkspace, gromit

workspace = special:gromit, gapsin:0, gapsout:0, shadow:false, on-created-empty: gromit-mpx -a --undo-key Z -o 1
windowrulev2 = noblur, class:^(Gromit-mpx)$
windowrulev2 = noanim, class:^(Gromit-mpx)$
windowrulev2 = noshadow, class:^(Gromit-mpx)$
windowrulev2 = fullscreenstate 1 1, class:^(Gromit-mpx)$

## window rules

# gamescope
windowrulev2 = fullscreen, class: gamescope
# windowrulev2 = immediate, class: gamescope

# modals
windowrulev2 = float, class:org.kde.polkit-kde-authentication-agent-1
windowrulev2 = float, class:obsidian,title:^$

# fixes
windowrulev2 = tile, class: Aseprite

# shimeji
# windowrule = float, com-group_finity-mascot-Main
# windowrule = noblur, com-group_finity-mascot-Main
# windowrule = nofocus, com-group_finity-mascot-Main
# windowrule = noshadow, com-group_finity-mascot-Main
# windowrule = noborder, com-group_finity-mascot-Main

windowrulev2 = float, class:^(shimeji)$
windowrulev2 = noblur, class:^(shimeji)$
# windowrulev2 = nofocus, class:^(shimeji)$
windowrulev2 = noshadow, class:^(shimeji)$
windowrulev2 = noborder, class:^(shimeji)$
windowrulev2 = norounding, class:^(shimeji)$

# locking
windowrulev2 = opacity 0, tag:gone

# misc
windowrulev2 = noblur, floating:1
windowrulev2 = suppressevent maximize, class:.*
